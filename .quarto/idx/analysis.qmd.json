{"title":"analysis","markdown":{"yaml":{"title":"analysis"},"headingText":"add untracked observations as points from locality position","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(renv)\n\ninstall(\"tidyverse\")\ninstall(\"sf\")\ninstall(\"CornellLabofOrnithology/auk\")\ninstall(\"DT\")\ninstall(\"cowplot\")\ninstall(\"mapview\")\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(auk)\nlibrary(DT)\nlibrary(cowplot)\nlibrary(mapview)\n```\n\n```{r}\nlocalities <- read_sf(\"data/raw/pub_commcnc.shp\")\npatch_boundary <- localities %>% \n  filter(cc_name == \"Royal Burgh of St Andrews\") %>% \n  st_transform(crs = 4326) %>% \n  st_buffer(dist = 10)\n\nebird_raw <- read_csv(\"data/raw/MyEBirdData.csv\")\nebird_patch <- ebird_raw %>% \n  filter(year(Date) == 2024) %>% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326, remove = FALSE) %>% \n  filter(as.logical(st_intersects(., patch_boundary))) %>% \n  st_drop_geometry()\n\nwrite_sf(patch_boundary, \"data/patch_boundary.gpkg\")\nwrite_csv(ebird_patch, \"data/patch_observations.csv\")\n\nrm(localities, ebird_raw, ebird_patch)\n```\n\n```{r}\nrollup_key <- ebird_taxonomy %>% \n  mutate(report_as = if_else(category == \"species\", species_code, report_as)) %>% \n  select(taxon_order, report_as) %>% \n  left_join(., \n            ebird_taxonomy %>% \n              select(-taxon_order),\n            by = c(\"report_as\" = \"species_code\"))\n\npatch_observations <- read_csv(\"data/patch_observations.csv\") %>% \n  select(\"checklist_id\" = \"Submission ID\",\n         \"taxon_order\" = \"Taxonomic Order\",\n         \"observation_count\" = \"Count\",\n         \"locality_id\" = \"Location ID\",\n         \"locality\" = \"Location\",\n         \"latitude\" = \"Latitude\",\n         \"longitude\" = \"Longitude\",\n         \"observation_date\" = \"Date\",\n         \"observation_time\" = \"Time\",\n         \"protocol\" = \"Protocol\",\n         \"duration_min\" = \"Duration (Min)\",\n         \"all_observations_reported\" = \"All Obs Reported\",\n         \"effort_distance_km\" = \"Distance Traveled (km)\",\n         \"breeding_code\" = \"Breeding Code\") %>% \n  left_join(., rollup_key, by = \"taxon_order\") %>% \n  drop_na(common_name)\n\npatch_list <- patch_observations %>% \n  arrange(observation_date, observation_time, taxon_order) %>% \n  group_by(scientific_name) %>% \n  filter(row_number() == 1) %>% \n  ungroup() %>% \n  mutate(obs_order = row_number()) %>% \n  arrange(taxon_order) %>% \n  mutate(tax_order = row_number()) %>% \n  arrange(observation_date, observation_time, taxon_order) %>% \n  select(obs_order, observation_date, locality, common_name, \n         scientific_name, tax_order, checklist_id) %>% \n  left_join(., ebird_taxonomy %>% \n              select(scientific_name, species_code), \n            by = \"scientific_name\") %>% \n  mutate(ebird_url = paste0(\"https://ebird.org/species/\", \n                      species_code, \"/GB-SCT-FIF\"),\n         link = str_replace_all(tolower(common_name), \" \", \"-\"))\n\nsave(patch_list, file = \"data/patch_list.RData\")\n```\n\n```{r}\npatch_months <- reduce(\n  list(\n    patch_observations %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_species = n_distinct(common_name)),\n    patch_observations %>% \n      select(-c(taxon_order, observation_count, breeding_code, \n                report_as, scientific_name, common_name, order, family, \n                family_common, category, report_as.y, extinct)) %>% \n      distinct() %>% \n      filter(all_observations_reported == 1) %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_completes = n_distinct(checklist_id)),\n    patch_observations %>% \n      select(-c(taxon_order, observation_count, breeding_code, \n                report_as, scientific_name, common_name, order, family, \n                family_common, category, report_as.y, extinct)) %>% \n      distinct() %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_days = n_distinct(observation_date),\n                sum_duration = round(sum(duration_min, na.rm = TRUE)/60, 1),\n                sum_distance = round(sum(effort_distance_km, na.rm = TRUE), 1)),\n    patch_list %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_additions = n_distinct(common_name))\n  ),\n  left_join\n)\n\nsave(patch_months, file = \"data/patch_months.RData\")\n```\n\n```{r}\npatch_species <- reduce(\n  list(\n    patch_observations %>% \n      group_by(scientific_name, common_name) %>% \n      summarise(taxon_order = min(taxon_order),\n                n_records = n(),\n                n_months = n_distinct(month(observation_date)),\n                n_sites = n_distinct(locality),\n                sum_count = sum(observation_count, na.rm = TRUE),\n                max_count = max(observation_count, na.rm = TRUE)) %>% \n      arrange(taxon_order),\n    patch_observations %>% \n      group_by(scientific_name, common_name) %>% \n      arrange(desc(observation_count)) %>% \n      filter(row_number() == 1) %>% \n      select(scientific_name, common_name, checklist_id),\n    patch_observations %>% \n      mutate(breeding_code = word(breeding_code, 1)) %>% \n      drop_na(breeding_code) %>% \n      filter(breeding_code != \"F\") %>% \n      mutate(breeding_code = factor(breeding_code, levels = c(\n        \"NY\", \"NE\", \"FS\", \"FY\", \"CF\", \"FL\", \"ON\", \"UN\", \"DD\", \"NB\", \"CN\",\n        \"PE\", \"B\", \"A\", \"N\", \"C\", \"T\", \"P\", \"M\", \"S7\", \"S\", \"H\"\n      ))) %>% \n      group_by(scientific_name, common_name) %>% \n      arrange(breeding_code) %>% \n      summarise(breeding_codes = paste(unique(breeding_code), collapse = \", \"))\n  ),\n  left_join\n) %>%\n  mutate(breeding_codes = replace_na(breeding_codes, \"none\"),\n         max_count = as.integer(max_count),\n         sum_count = as.integer(sum_count))\n\nsave(patch_species, file = \"data/patch_species.RData\")  \n```\n\n```{r}\npatch_monthrrs <- patch_observations %>% \n  filter(all_observations_reported == TRUE) %>% \n  group_by(month = month(observation_date)) %>% \n  summarise(n_checklists = n_distinct(checklist_id)) %>% \n  expand_grid(., common_name = unique(patch_observations$common_name)) %>% \n  left_join(., patch_observations %>% \n              group_by(common_name, month = month(observation_date)) %>% \n              summarise(n_obs = n_distinct(checklist_id))) %>% \n  mutate(n_obs = replace_na(n_obs, 0),\n         reporting_rate = n_obs / n_checklists) %>% \n  left_join(., patch_list %>% \n              select(common_name, scientific_name, tax_order)) %>% \n  arrange(tax_order, month) %>% \n  select(common_name, scientific_name, tax_order, month, n_checklists, n_obs, reporting_rate)\n\npatch_pulses <- list()\n\nfor (i in 1:nrow(patch_list)) {\n  \n  rrs <- filter(patch_monthrrs, common_name == pull(arrange(patch_list, tax_order), common_name)[i]) %>% \n    mutate(reporting_rate = if_else(reporting_rate > 1, 1, reporting_rate))\n  \n  patch_pulses[[i]] <- ggplot(rrs) +\n    geom_rect(aes(xmin = month - 0.5, xmax = month + 0.5, ymin = -sqrt(reporting_rate), ymax = sqrt(reporting_rate))) +\n    scale_x_continuous(limits = c(0.5, 12.5), expand = c(0, 0), breaks = 1:12, labels = str_sub(month.name, 1, 1)) +\n    scale_y_continuous(limits = c(-1, 1), expand = c(0, 0)) +\n    theme_nothing() +\n    theme(axis.text.x = element_text(size = 10)) +\n    labs(x = NULL, y = NULL)\n  \n  rm(rrs)\n}\n\nsave(patch_pulses, file = \"data/patch_pulses.RData\")  \n```\n\n```{r}\npatch_tracks <- read_sf(\"data/raw/patch_tracks.gpkg\") %>% \n  select(-Name, -Description) %>% \n  full_join(., patch_observations) %>% \n  drop_na(locality) %>%\n  st_intersection(., patch_boundary)\n\npatch_tracks <- left_join(patch_observations, patch_tracks) %>% \n  filter(is.na(cc_name)) %>% \n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326, remove = FALSE) %>% \n  select(-geom) %>% \n  rename(geom = geometry) %>% \n  bind_rows(patch_tracks, .)\n\nsave(patch_tracks, file = \"data/patch_tracks.RData\")  \n```\n\n```{r}\npatch_sites <- patch_observations %>% \n  select(checklist_id, locality_id, locality, latitude, longitude, \n         observation_date, observation_time, protocol, duration_min,\n         all_observations_reported, effort_distance_km) %>% \n  distinct() %>% \n  group_by(locality_id, locality, latitude, longitude) %>% \n  summarise(n_checklists = n_distinct(checklist_id),\n            n_months = n_distinct(month(observation_date)),\n            sum_duration = sum(duration_min / 60, na.rm = TRUE),\n            sum_distance = sum(effort_distance_km, na.rm = TRUE)) %>% \n  left_join(., patch_observations %>% \n              group_by(locality_id) %>% \n              summarise(n_species = n_distinct(common_name)),\n            by = \"locality_id\") %>% \n  ungroup()\n\nsave(patch_sites, file = \"data/patch_sites.RData\")\n```\n","srcMarkdownNoYaml":"\n\n```{r}\nlibrary(renv)\n\ninstall(\"tidyverse\")\ninstall(\"sf\")\ninstall(\"CornellLabofOrnithology/auk\")\ninstall(\"DT\")\ninstall(\"cowplot\")\ninstall(\"mapview\")\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(auk)\nlibrary(DT)\nlibrary(cowplot)\nlibrary(mapview)\n```\n\n```{r}\nlocalities <- read_sf(\"data/raw/pub_commcnc.shp\")\npatch_boundary <- localities %>% \n  filter(cc_name == \"Royal Burgh of St Andrews\") %>% \n  st_transform(crs = 4326) %>% \n  st_buffer(dist = 10)\n\nebird_raw <- read_csv(\"data/raw/MyEBirdData.csv\")\nebird_patch <- ebird_raw %>% \n  filter(year(Date) == 2024) %>% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326, remove = FALSE) %>% \n  filter(as.logical(st_intersects(., patch_boundary))) %>% \n  st_drop_geometry()\n\nwrite_sf(patch_boundary, \"data/patch_boundary.gpkg\")\nwrite_csv(ebird_patch, \"data/patch_observations.csv\")\n\nrm(localities, ebird_raw, ebird_patch)\n```\n\n```{r}\nrollup_key <- ebird_taxonomy %>% \n  mutate(report_as = if_else(category == \"species\", species_code, report_as)) %>% \n  select(taxon_order, report_as) %>% \n  left_join(., \n            ebird_taxonomy %>% \n              select(-taxon_order),\n            by = c(\"report_as\" = \"species_code\"))\n\npatch_observations <- read_csv(\"data/patch_observations.csv\") %>% \n  select(\"checklist_id\" = \"Submission ID\",\n         \"taxon_order\" = \"Taxonomic Order\",\n         \"observation_count\" = \"Count\",\n         \"locality_id\" = \"Location ID\",\n         \"locality\" = \"Location\",\n         \"latitude\" = \"Latitude\",\n         \"longitude\" = \"Longitude\",\n         \"observation_date\" = \"Date\",\n         \"observation_time\" = \"Time\",\n         \"protocol\" = \"Protocol\",\n         \"duration_min\" = \"Duration (Min)\",\n         \"all_observations_reported\" = \"All Obs Reported\",\n         \"effort_distance_km\" = \"Distance Traveled (km)\",\n         \"breeding_code\" = \"Breeding Code\") %>% \n  left_join(., rollup_key, by = \"taxon_order\") %>% \n  drop_na(common_name)\n\npatch_list <- patch_observations %>% \n  arrange(observation_date, observation_time, taxon_order) %>% \n  group_by(scientific_name) %>% \n  filter(row_number() == 1) %>% \n  ungroup() %>% \n  mutate(obs_order = row_number()) %>% \n  arrange(taxon_order) %>% \n  mutate(tax_order = row_number()) %>% \n  arrange(observation_date, observation_time, taxon_order) %>% \n  select(obs_order, observation_date, locality, common_name, \n         scientific_name, tax_order, checklist_id) %>% \n  left_join(., ebird_taxonomy %>% \n              select(scientific_name, species_code), \n            by = \"scientific_name\") %>% \n  mutate(ebird_url = paste0(\"https://ebird.org/species/\", \n                      species_code, \"/GB-SCT-FIF\"),\n         link = str_replace_all(tolower(common_name), \" \", \"-\"))\n\nsave(patch_list, file = \"data/patch_list.RData\")\n```\n\n```{r}\npatch_months <- reduce(\n  list(\n    patch_observations %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_species = n_distinct(common_name)),\n    patch_observations %>% \n      select(-c(taxon_order, observation_count, breeding_code, \n                report_as, scientific_name, common_name, order, family, \n                family_common, category, report_as.y, extinct)) %>% \n      distinct() %>% \n      filter(all_observations_reported == 1) %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_completes = n_distinct(checklist_id)),\n    patch_observations %>% \n      select(-c(taxon_order, observation_count, breeding_code, \n                report_as, scientific_name, common_name, order, family, \n                family_common, category, report_as.y, extinct)) %>% \n      distinct() %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_days = n_distinct(observation_date),\n                sum_duration = round(sum(duration_min, na.rm = TRUE)/60, 1),\n                sum_distance = round(sum(effort_distance_km, na.rm = TRUE), 1)),\n    patch_list %>% \n      group_by(month = month(observation_date)) %>% \n      summarise(n_additions = n_distinct(common_name))\n  ),\n  left_join\n)\n\nsave(patch_months, file = \"data/patch_months.RData\")\n```\n\n```{r}\npatch_species <- reduce(\n  list(\n    patch_observations %>% \n      group_by(scientific_name, common_name) %>% \n      summarise(taxon_order = min(taxon_order),\n                n_records = n(),\n                n_months = n_distinct(month(observation_date)),\n                n_sites = n_distinct(locality),\n                sum_count = sum(observation_count, na.rm = TRUE),\n                max_count = max(observation_count, na.rm = TRUE)) %>% \n      arrange(taxon_order),\n    patch_observations %>% \n      group_by(scientific_name, common_name) %>% \n      arrange(desc(observation_count)) %>% \n      filter(row_number() == 1) %>% \n      select(scientific_name, common_name, checklist_id),\n    patch_observations %>% \n      mutate(breeding_code = word(breeding_code, 1)) %>% \n      drop_na(breeding_code) %>% \n      filter(breeding_code != \"F\") %>% \n      mutate(breeding_code = factor(breeding_code, levels = c(\n        \"NY\", \"NE\", \"FS\", \"FY\", \"CF\", \"FL\", \"ON\", \"UN\", \"DD\", \"NB\", \"CN\",\n        \"PE\", \"B\", \"A\", \"N\", \"C\", \"T\", \"P\", \"M\", \"S7\", \"S\", \"H\"\n      ))) %>% \n      group_by(scientific_name, common_name) %>% \n      arrange(breeding_code) %>% \n      summarise(breeding_codes = paste(unique(breeding_code), collapse = \", \"))\n  ),\n  left_join\n) %>%\n  mutate(breeding_codes = replace_na(breeding_codes, \"none\"),\n         max_count = as.integer(max_count),\n         sum_count = as.integer(sum_count))\n\nsave(patch_species, file = \"data/patch_species.RData\")  \n```\n\n```{r}\npatch_monthrrs <- patch_observations %>% \n  filter(all_observations_reported == TRUE) %>% \n  group_by(month = month(observation_date)) %>% \n  summarise(n_checklists = n_distinct(checklist_id)) %>% \n  expand_grid(., common_name = unique(patch_observations$common_name)) %>% \n  left_join(., patch_observations %>% \n              group_by(common_name, month = month(observation_date)) %>% \n              summarise(n_obs = n_distinct(checklist_id))) %>% \n  mutate(n_obs = replace_na(n_obs, 0),\n         reporting_rate = n_obs / n_checklists) %>% \n  left_join(., patch_list %>% \n              select(common_name, scientific_name, tax_order)) %>% \n  arrange(tax_order, month) %>% \n  select(common_name, scientific_name, tax_order, month, n_checklists, n_obs, reporting_rate)\n\npatch_pulses <- list()\n\nfor (i in 1:nrow(patch_list)) {\n  \n  rrs <- filter(patch_monthrrs, common_name == pull(arrange(patch_list, tax_order), common_name)[i]) %>% \n    mutate(reporting_rate = if_else(reporting_rate > 1, 1, reporting_rate))\n  \n  patch_pulses[[i]] <- ggplot(rrs) +\n    geom_rect(aes(xmin = month - 0.5, xmax = month + 0.5, ymin = -sqrt(reporting_rate), ymax = sqrt(reporting_rate))) +\n    scale_x_continuous(limits = c(0.5, 12.5), expand = c(0, 0), breaks = 1:12, labels = str_sub(month.name, 1, 1)) +\n    scale_y_continuous(limits = c(-1, 1), expand = c(0, 0)) +\n    theme_nothing() +\n    theme(axis.text.x = element_text(size = 10)) +\n    labs(x = NULL, y = NULL)\n  \n  rm(rrs)\n}\n\nsave(patch_pulses, file = \"data/patch_pulses.RData\")  \n```\n\n```{r}\npatch_tracks <- read_sf(\"data/raw/patch_tracks.gpkg\") %>% \n  select(-Name, -Description) %>% \n  full_join(., patch_observations) %>% \n  drop_na(locality) %>%\n  st_intersection(., patch_boundary)\n\n# add untracked observations as points from locality position\npatch_tracks <- left_join(patch_observations, patch_tracks) %>% \n  filter(is.na(cc_name)) %>% \n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326, remove = FALSE) %>% \n  select(-geom) %>% \n  rename(geom = geometry) %>% \n  bind_rows(patch_tracks, .)\n\nsave(patch_tracks, file = \"data/patch_tracks.RData\")  \n```\n\n```{r}\npatch_sites <- patch_observations %>% \n  select(checklist_id, locality_id, locality, latitude, longitude, \n         observation_date, observation_time, protocol, duration_min,\n         all_observations_reported, effort_distance_km) %>% \n  distinct() %>% \n  group_by(locality_id, locality, latitude, longitude) %>% \n  summarise(n_checklists = n_distinct(checklist_id),\n            n_months = n_distinct(month(observation_date)),\n            sum_duration = sum(duration_min / 60, na.rm = TRUE),\n            sum_distance = sum(effort_distance_km, na.rm = TRUE)) %>% \n  left_join(., patch_observations %>% \n              group_by(locality_id) %>% \n              summarise(n_species = n_distinct(common_name)),\n            by = \"locality_id\") %>% \n  ungroup()\n\nsave(patch_sites, file = \"data/patch_sites.RData\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","page-layout":"full","title":"analysis"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}